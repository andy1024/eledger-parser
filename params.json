{"name":"Eledger-parser","tagline":"School e-ledger extracting and parsing tool to be used by parents in order to monitor their child's progress in education","body":"# eledger-parser\r\nSchool e-ledger extracting and parsing tool to be used by parents in order to monitor their child's progress in education\r\n\r\n1. Use case\r\n\r\n   I wanted to be sure that nothing that is posted on my kids' e-ledger gets unnoticed: homeworks, important messages, test annoucements. So I designed this little tool to extract all the relevant information, pack it to a document as short and concise as possible, and send it automatically to thermal printer that sits in the room for anyone to notice. The printer had to cut the paper itself, letting it to be picked by me or my wife as a set of direction for a homework tasked to our kids.\r\n\r\n   Why I didn't consider opening the ledger's website on a smartphone and reading relevant info from it? Two reasons: smartphone easily distracts children and website isn't particularly well designed to browse on a small screen.\r\n   Third, implicit, reason was to make something cool with my thermal printer, that wasn't just a bunch of silly images on a printout.\r\n\r\n2. Design\r\n\r\n   Many of the tool's features are answers to my personal needs, that no one else would care about. However, I tried to make it as extensible as it gets. Whole thing is customizable by a simple properties file, including output format, formatter filter, event handlers and many, many more.\r\n\r\n3. Usage\r\n  1. Prerequisities  \r\n   In its OOB form, the software needs Java 7, LaTeX software with texlive-lang-polish, texlive-fonts-recommended and some printer to handle the output. You can however skip the preformatting part and send a plain text page to a generic CUPS printer by simple tweaks in properties file.\r\n   Of course you would also need an account on a e-ledger website that is run on a specific engine. For various reasons I'm not stating the default website manufacturer name. Feel free to ask, if you are interested in extending the tool to suit your needs.\r\n  2. Preconfiguration  \r\n   Edit the customconfig.properties file in your $HOME/.eledger directory and change the following keys to match your environment:\r\n\r\n   - sys.output.formatter : enter your formatter class of choice here (implements Formatter interface)\r\n   - sys.output.sink : enter output sink of your choice (implements Output interface)\r\n   - web.baseUrl : base URL of your e-ledger website\r\n   - auth.data : semicolon separated list of authentication pairs \"user,pass\" or \"user,pass,fullname\", where fullname is user-friendly name\r\n   - optional sys.output.preprocessor : implements Preprocessor interface, e.g. Dictionary\r\n\r\n   Config entries can use meta-instructions (MetaInstruction interface), e.g. DateMetaInstruction ($CURRENT_DATE), HomeDirMetaInstruction ($HOME)\r\n   \r\n4. Building\r\n\r\n   The tool main build management software is maven. \r\n   Build using 'mvn install' command\r\n\r\n5. Running the tool\r\n\r\n   The tool is configured with MANIFEST file, so you can run it by entering the simple command\r\n   'java -jar <artifact-name>', where artifact name is by default eledger-parser-with-dependencies.jar\r\n\r\n   In my intention it was supposed to be run from cron periodically, to make sure all important information awaits when we get home.\r\n\r\n6. Output\r\n\r\n   In the stdout you'll see some informational messages about program workings. First it will read the config, then access the datastore, next download the necessary information from the server, check what's and finally output the extract on the device specified in the configuration file.\r\n  1. Sample output  \r\n   ```\r\n   Event fired: app.event.start\r\n   Event handler class org.warheim.app.Application$1\r\n   application start\r\n   Event handler finished\r\n   /home/andy/.eledger/datastore.json\r\n   Nov 29, 2015 3:29:45 PM org.warheim.di.ObjectFactory createObject\r\n   INFO: null\r\n   Nov 29, 2015 3:29:45 PM org.warheim.di.ObjectFactory createObject\r\n   INFO: null\r\n   Nov 29, 2015 3:29:45 PM org.warheim.di.ObjectFactory createObject\r\n   INFO: null\r\n   Nov 29, 2015 3:29:45 PM org.warheim.di.ObjectFactory createObject\r\n   INFO: null\r\n   Event fired: app.event.afterConfigRead\r\n   All notifications\r\n   for user: Matthew C. Cornwallis\r\n   Tasks\r\n   Maths and algebra\r\n    2015-10-10 Memorize multiplication matrix\r\n    2015-10-12 Complex numbers calculus using algebraic theorems\r\n   English language\r\n    2015-11-12 Learn to cite any Shakespeare play\r\n   Tests\r\n   Maths and algebra\r\n    2015-11-30 All algebra test\r\n   Messages\r\n    111 2015-09-01 john@mit.edu all-students No more jumping on the bed!\r\n   \r\n   Event fired: app.event.beforeDataStoreWrite\r\n   Event fired: app.event.afterDataStoreWrite\r\n   Event fired: app.event.finish\r\n   ```\r\n\r\n7. Problems and troubleshooting\r\n\r\n   Nothing here for the moment\r\n\r\n8. What's next\r\n\r\n   - [ ] support more sources\r\n   - [x] make more formatters\r\n   - [ ] make more output destinations\r\n      - [x] e-mail \r\n      - [ ] alphanumerical LCD screen connected to a Raspberry PI)\r\n   - [x] support custom configuration\r\n   - [x] handle logouts\r\n   - [x] add custom user name support\r\n   - [x] add icons to PdfLatexFormatter\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}